# Docker Compose file for running paperless from the Docker Hub.
# This file contains everything paperless needs to run.
# Paperless supports amd64, arm and arm64 hardware.
#
# All compose files of paperless configure paperless in the following way:
#
# - Paperless is (re)started on system boot, if it was running before shutdown.
# - Docker volumes for storing data are managed by Docker.
# - Folders for importing and exporting files are created in the same directory
#   as this file and mounted to the correct folders inside the container.
# - Paperless listens on port 8010.
#
# In addition to that, this Docker Compose file adds the following optional
# configurations:
#
# - Instead of SQLite (default), PostgreSQL is used as the database server.
#
# To install and update paperless with this file, do the following:
#
# - Open portainer Stacks list and click 'Add stack'
# - Paste the contents of this file and assign a name, e.g. 'paperless'
# - Click 'Deploy the stack' and wait for it to be deployed
# - Open the list of containers, select paperless_webserver_1
# - Click 'Console' and then 'Connect' to open the command line inside the container
# - Run 'python3 manage.py createsuperuser' to create a user
# - Exit the console
#
# For more extensive installation and update instructions, refer to the
# documentation.

version: "3.4"
services:

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    networks: 
      - overlay_public
    ports:
      - "8010:8000"
    volumes:
      - data:/usr/src/paperless/data
      - ${paperless_media_folder}:/usr/src/paperless/media
      - ${paperless_export_folder}:/usr/src/paperless/export
      - ${paperless_import_folder}:/usr/src/paperless/consume
    secrets:
      - PAPERLESS_DB_SECRET
      - PAPERLESS_SECRET_KEY
      - PAPERLESS_ADMIN_PASSWORD
      - PAPERLESS_OIDC_PROVIDER
    environment:
      PAPERLESS_ADMIN_USER: admin
      PAPERLESS_ADMIN_PASSWORD_FILE: '/run/secrets/PAPERLESS_ADMIN_PASSWORD' 
      PAPERLESS_REDIS: redis://redis:6379/1
      PAPERLESS_DBHOST: db
      PAPERLESS_DBUSER: 'paperless'
      PAPERLESS_DBNAME: 'paperless'
      PAPERLESS_DBPASS_FILE: '/run/secrets/PAPERLESS_DB_SECRET'
      PAPERLESS_APPS: 'allauth.socialaccount.providers.openid_connect'
      USERMAP_UID: 1000
      USERMAP_GID: 1000
      PAPERLESS_OCR_LANGUAGES: deu eng chi_tra
      PAPERLESS_SECRET_KEY_FILE: '/run/secrets/PAPERLESS_SECRET_KEY'
      PAPERLESS_TIME_ZONE: Europe/Berlin
      PAPERLESS_OCR_LANGUAGE: deu
      PAPERLESS_URL: 'https://docs.${domain}'
      PAPERLESS_OIDC_PROVIDER_FILE: '/run/secrets/PAPERLESS_OIDC_PROVIDER' #>
      # {"openid_connect":{"SCOPE":["openid","profile","email"],"OAUTH_PKCE_ENABLED":true,"APPS":[{"provider_id":"authelia","name":"Authelia","client_id":"paperless","secret":"insecure_password","settings":{"server_url":"https://auth.example.com/.well-known/openid-configuration","token_auth_method":"client_secret_basic"}}]}}
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.services.paperless.loadbalancer.server.port=8000'
        - 'traefik.http.routers.paperless.rule=Host(`docs.${domain}`)'
        - 'traefik.http.routers.paperless.tls=true'
        - 'traefik.http.routers.paperless.tls.certresolver=cloudflare'
        - 'traefik.http.routers.paperless.tls.domains[0].main=${domain}'
        - 'traefik.http.routers.paperless.tls.domains[0].sans=*.${domain}'
        - 'traefik.http.routers.paperless.entrypoints=https,https-external'

volumes:
  data:
  redisdata:

secrets:
  PAPERLESS_DB_SECRET:
    external: true
  PAPERLESS_SECRET_KEY:
    external: true
  PAPERLESS_ADMIN_PASSWORD:
    external: true
  PAPERLESS_OIDC_PROVIDER:
    external: true

networks:
  overlay_public:
    external: true